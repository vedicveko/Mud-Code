SPECIAL(class_mage)
{
  struct char_data *vict;

  if (cmd || GET_POS(ch) != POS_FIGHTING)
    return FALSE;

  /* pseudo-randomly choose someone in the room who is fighting me */
  for (vict = world[ch->in_room].people; vict; vict = vict->next_in_room)
    if (FIGHTING(vict) == ch && !number(0, 4))
      break;

  /* if I didn't pick any of those, then just slam the guy I'm fighting */
  if (vict == NULL)
    vict = FIGHTING(ch);

     if(number(0,200) > (GET_LEVEL(ch)+10))
       return FALSE;

     switch(number((GET_LEVEL(ch)>>1) , GET_LEVEL(ch))) {
     case 0:;
     case 1:
       cast_spell(ch, vict, NULL, SPELL_MAGIC_MISSILE, ABT_SPELL);
       break;
     case 2:;
     case 3:
       cast_spell(ch, vict, NULL, SPELL_CHILL_TOUCH, ABT_SPELL);
       break;
     case 4:;
     case 5:
       cast_spell(ch, vict, NULL, SPELL_BURNING_HANDS, ABT_SPELL);
       break;  
     case 6:;
     case 7:
       cast_spell(ch, vict, NULL, SPELL_SHOCKING_GRASP, ABT_SPELL);
       break;
     case 8:;
     case 9:
     case 10:;
     case 11:
     case 12:;    case 13:;   case 14:;   
     case 15:
       cast_spell(ch, vict, NULL, SPELL_LIGHTNING_BOLT, ABT_SPELL);
       break;
     case 16:;    case 17:;    case 18:;   case 19:;
     case 20:
       cast_spell(ch, vict, NULL, SPELL_COLOR_SPRAY, ABT_SPELL);
       break;
     case 21:    
     case 22:
     case 23:;   case 24:;
     case 25:
       cast_spell(ch, vict, NULL, SPELL_ENERGY_DRAIN, ABT_SPELL);
       break;
     case 26:;    case 27:;
     case 28:
       cast_spell(ch, vict, NULL, SPELL_FIREBALL, ABT_SPELL);
       break;
     case 29:;
     case 30:
     case 31:;    case 32:;   case 33:;   case 34:;
     case 35:
       cast_spell(ch, vict, NULL, SPELL_SONIC_WALL, ABT_SPELL);
       break;
     case 36:;    case 37:;   case 38:;   case 39:;
     case 40: 
     case 41:;
     case 42:
     case 43:;    case 44:;
     case 45:
     case 46:;    case 47:;  case 48:;    case 49:;
     case 50:;
     case 51:
       cast_spell(ch, vict, NULL, SPELL_FIRESTORM, ABT_SPELL);
       break;
     default:
       cast_spell(ch, vict, NULL, SPELL_FIRESTORM, ABT_SPELL);
       break;
     }
    return TRUE;
   

}
